{"ast":null,"code":"import _slicedToArray from \"/Users/b/hello-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/b/hello-world/src/Components/SearchBar.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport SearchButton from \"./SearchButton\";\nimport SingleMovie from \"./SingleMovie\";\nimport userDebounce from \"../Helpers/useDebounce.js\";\nimport loader from \"./loading.gif\";\nimport '../style.css';\n\nfunction SearchBar() {\n  const test = {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: \"2%\",\n    marginRight: \"2%\"\n  };\n  const movies = {\n    width: \"96%\",\n    top: \"85px\",\n    background: \"whitesmoke\",\n    borderRadius: \"0px 0px 5px 5px\",\n    position: \"absolute\",\n    border: \"0px\",\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n  };\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        keyword = _useState2[0],\n        setKeyword = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        results = _useState4[0],\n        setResults = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSearching = _useState6[0],\n        setIsSearching = _useState6[1];\n\n  const debouncedSearch = userDebounce(keyword, 1000);\n\n  const getMovies = keyword => {\n    fetch('https://api.themoviedb.org/3/search/movie?api_key=ba0ac7475d9d6eef735d172d922bea03&language=en-US&query=' + keyword).then(response => {\n      return response.json();\n    }).then(response => {\n      setIsSearching(false);\n      setResults(response.results.slice(0, 8));\n    });\n  };\n\n  useEffect(() => {\n    if (debouncedSearch && debouncedSearch.length >= 3) {\n      setIsSearching(true);\n      getMovies(debouncedSearch);\n    } else {\n      setResults([]);\n    }\n  }, [debouncedSearch]);\n  return React.createElement(\"div\", {\n    style: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"query\",\n    placeholder: \"Enter movie name\",\n    onChange: e => setKeyword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(SearchButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, isSearching && React.createElement(\"img\", {\n    src: loader,\n    alt: \"loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), results.map(item => React.createElement(SingleMovie, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/b/hello-world/src/Components/SearchBar.js"],"names":["React","useState","useEffect","useCallback","SearchButton","SingleMovie","userDebounce","loader","SearchBar","test","width","height","display","alignItems","marginLeft","marginRight","movies","top","background","borderRadius","position","border","boxShadow","keyword","setKeyword","results","setResults","isSearching","setIsSearching","debouncedSearch","getMovies","fetch","then","response","json","slice","length","e","target","value","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAmCC,WAAnC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAO,cAAP;;AACA,SAASC,SAAT,GAAoB;AAId,QAAMC,IAAI,GAAE;AACVC,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVC,IAAAA,OAAO,EAAE,MAHC;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,UAAU,EAAE,IALF;AAMVC,IAAAA,WAAW,EAAE;AANH,GAAZ;AASA,QAAMC,MAAM,GAAG;AACbN,IAAAA,KAAK,EAAE,KADM;AAEbO,IAAAA,GAAG,EAAE,MAFQ;AAGbC,IAAAA,UAAU,EAAE,YAHC;AAIbC,IAAAA,YAAY,EAAE,iBAJD;AAKbC,IAAAA,QAAQ,EAAE,UALG;AAMbC,IAAAA,MAAM,EAAC,KANM;AAObC,IAAAA,SAAS,EAAE;AAPE,GAAf;;AAbc,oBAuBgBrB,QAAQ,CAAC,EAAD,CAvBxB;AAAA;AAAA,QAuBPsB,OAvBO;AAAA,QAuBEC,UAvBF;;AAAA,qBAwBgBvB,QAAQ,CAAC,EAAD,CAxBxB;AAAA;AAAA,QAwBPwB,OAxBO;AAAA,QAwBEC,UAxBF;;AAAA,qBAyBwBzB,QAAQ,CAAC,KAAD,CAzBhC;AAAA;AAAA,QAyBP0B,WAzBO;AAAA,QAyBMC,cAzBN;;AA0Bd,QAAMC,eAAe,GAAGvB,YAAY,CAACiB,OAAD,EAAU,IAAV,CAApC;;AAEA,QAAMO,SAAS,GAAIP,OAAD,IAAY;AAC5BQ,IAAAA,KAAK,CAAC,6GAA2GR,OAA5G,CAAL,CACCS,IADD,CACOC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHD,EAGGF,IAHH,CAGSC,QAAD,IAAc;AAClBL,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,MAAAA,UAAU,CAACO,QAAQ,CAACR,OAAT,CAAiBU,KAAjB,CAAuB,CAAvB,EAAyB,CAAzB,CAAD,CAAV;AACD,KANH;AAQD,GATD;;AAWAjC,EAAAA,SAAS,CAAE,MAAM;AACb,QAAG2B,eAAe,IAAIA,eAAe,CAACO,MAAhB,IAAwB,CAA9C,EAAgD;AAC9CR,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,SAAS,CAACD,eAAD,CAAT;AACD,KAHD,MAGK;AACHH,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACJ,GAPQ,EAST,CAACG,eAAD,CATS,CAAT;AAaA,SACE;AAAK,IAAA,KAAK,EAAEpB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAII,IAAA,QAAQ,EAAE4B,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADF,EAUE;AAAK,IAAA,KAAK,EAAEvB,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,WAAW,IAAI;AAAK,IAAA,GAAG,EAAEpB,MAAV;AAAkB,IAAA,GAAG,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,EAEGkB,OAAO,CAACe,GAAR,CAAcC,IAAD,IAAU,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,IAAA,IAAI,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAFH,CAVF,CADF;AAmBD;;AAEL,eAAejC,SAAf","sourcesContent":["import React, {useState,useEffect, useCallback} from \"react\"\nimport SearchButton from \"./SearchButton\"\nimport SingleMovie from \"./SingleMovie\"\nimport userDebounce from \"../Helpers/useDebounce.js\"\nimport loader from \"./loading.gif\"\nimport '../style.css'\nfunction SearchBar(){\n\n\n\n      const test ={\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        marginLeft: \"2%\",\n        marginRight: \"2%\"\n      }\n\n      const movies = {\n        width: \"96%\",\n        top: \"85px\",\n        background: \"whitesmoke\",\n        borderRadius: \"0px 0px 5px 5px\",\n        position: \"absolute\",\n        border:\"0px\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n      }\n\n      const [keyword, setKeyword] = useState('')\n      const [results, setResults] = useState([])\n      const [isSearching, setIsSearching] = useState(false)\n      const debouncedSearch = userDebounce(keyword, 1000)\n\n      const getMovies = (keyword) =>{\n        fetch('https://api.themoviedb.org/3/search/movie?api_key=ba0ac7475d9d6eef735d172d922bea03&language=en-US&query='+keyword)\n        .then((response) => {\n          return response.json()\n        }).then((response) => {\n            setIsSearching(false)\n            setResults(response.results.slice(0,8))\n          }\n        )\n      }\n\n      useEffect( () => {\n          if(debouncedSearch && debouncedSearch.length>=3){\n            setIsSearching(true);\n            getMovies(debouncedSearch)\n          }else{\n            setResults([])\n          }\n      },\n\n      [debouncedSearch]\n    )\n\n\n      return (\n        <div style={test}>\n          <div className=\"searchBar\">\n          <input\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"Enter movie name\"\n              onChange={e => setKeyword(e.target.value)}/>\n          <SearchButton />\n          </div>\n\n          <div style={movies}>\n            {isSearching && <img src={loader} alt=\"loading...\" />}\n            {results.map( (item) => <SingleMovie key={item.id} item={item}/>)}\n          </div>\n\n\n        </div>\n      )\n    }\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}